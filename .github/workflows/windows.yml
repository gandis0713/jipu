name: Windows

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build:
    runs-on: [windows-2022]
    steps:
      - uses: actions/checkout@v3
      # # https://github.com/marketplace/actions/install-vulkan-sdk
      # - name: Install Vulkan SDK
      #   uses: humbletim/install-vulkan-sdk@v1.1.1
      #   with:
      #     version: 1.3.204.0
      #     cache: true
      # https://github.com/marketplace/actions/setup-vulkan-sdk
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader # Glslang, SPIRV-Cross, SPIRV-Tools
          vulkan-use-cache: true
      - name: Setup Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.12'
      # https://github.com/marketplace/actions/run-vcpkg
      - name: Setup CMake
        uses: lukka/get-cmake@v3.30.2
        with:
            cmakeVersion: '3.30.2'
      - name: Setup vcpkg and install them.
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          vcpkgGitCommitId: "1de2026f28ead93ff1773e6e680387643e914ea1" # 2024.07.12
          vcpkgJsonGlob: "${{ github.workspace }}/vcpkg.json"
          runVcpkgInstall: false
      - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          configurePreset: x64-windows-ninja-release
          buildPreset: x64-windows-ninja-release
          buildPresetAdditionalArgs: "['--target install']"
          # testPreset: x64-windows-ninja-release
      # https://github.com/marketplace/actions/action-slack
      - name: Send status of a job to slack.
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{ job.status }} # TODO : please fix me.
          author_name: ${{ env.AS_AUTHOR }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          # mention: "gandis0713"
          # if_mention: "failure"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }} # always(), failure() # Pick up events even if the job fails or is canceled.